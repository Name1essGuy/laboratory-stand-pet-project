---

- name: Dowload necessary files from CA server
  # Скачать файлы с удалённого сервера на устройство, с которого происходит запуск плейбука
  ansible.builtin.fetch:
    src: "{{ item.src }}"
    dest: "/tmp/OVPN/{{ item.filename }}"
    flat: true
  loop:
    - {src: "{{ ca_dir }}/pki/ca.crt",filename: "ca.crt"}
    - {src: "{{ ca_dir }}/pki/issued/server.crt", filename: "server.crt"}
  delegate_to: "{{ ca_server }}"
  run_once: true

- name: Put downloaded files to VPN server
  # Скопировать файлы с устройства, на котором происходит запуск плейбука на удалённый сервер
  ansible.builtin.copy:
    src: "/tmp/OVPN/{{ item.filename }}"
    dest: "{{ ovpn_server_dir }}/{{ item.filename }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  loop:
    - { filename: "ca.crt", owner: "{{ ovpn_username }}", group: "{{ ovpn_group }}", mode: "u=rwx,g=rx,o=" }
    - { filename: "server.crt", owner: "{{ ovpn_username }}", group: "{{ ovpn_group }}", mode: "u=rwx,g=rx,o=" }

- name: Generate TLS key
  ansible.builtin.command: "openvpn --genkey secret ta.key"
  args:
    chdir: "{{ ovpn_server_dir }}"

- name: Set permissions for TLS key
  ansible.builtin.file:
    path: "{{ ovpn_server_dir }}/ta.key"
    owner: "{{ ovpn_username }}"
    group: "{{ ovpn_group }}"
    mode: "u=rwx,g=rx,o=" # 0750

- name: Copy server config
  ansible.builtin.template:
    src: server.conf.j2
    dest: "{{ ovpn_server_dir }}/server.conf"
    owner: "{{ ovpn_username }}"
    group: "{{ ovpn_group }}"
    mode: "u=rwx,g=rx,o=" # 0750

- name: Enable and start OVPN server
  ansible.builtin.systemd_service:
    name: openvpn-server@server.service
    state: started
    enabled: yes
